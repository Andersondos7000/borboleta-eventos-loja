#!/usr/bin/env pwsh

# Script de monitoramento para Supabase (Windows)
# Uso: ./monitor.ps1

# Configura√ß√£o de erro
$ErrorActionPreference = "Stop"

# Verificar vari√°veis de ambiente
if (-not $env:SUPABASE_ACCESS_TOKEN) {
    Write-Error "‚ùå SUPABASE_ACCESS_TOKEN n√£o definido"
    exit 1
}

if (-not $env:PROJECT_REF) {
    Write-Error "‚ùå PROJECT_REF n√£o definido"
    exit 1
}

# Diret√≥rio para relat√≥rios
$reportsDir = "./reports"
if (-not (Test-Path $reportsDir)) {
    New-Item -ItemType Directory -Path $reportsDir | Out-Null
}

$ENVIRONMENT = if ($env:ENVIRONMENT) { $env:ENVIRONMENT } else { "staging" }
$TIMESTAMP = Get-Date -Format "yyyyMMdd_HHmmss"

Write-Host "üìä Monitoramento de Banco de Dados - $ENVIRONMENT" -ForegroundColor Cyan

# 1. Verificar CLI e token
Write-Host "üîë Verificando autentica√ß√£o..." -ForegroundColor Yellow
supabase --version
supabase whoami

# 2. Vincular projeto
Write-Host "üîó Vinculando projeto..." -ForegroundColor Yellow
supabase link --project-ref $env:PROJECT_REF

# 3. Verificar status
Write-Host "üìä Verificando status..." -ForegroundColor Yellow
supabase status

# 4. Verificar performance
Write-Host "üìà Verificando performance..." -ForegroundColor Yellow

# Queries lentas
Write-Host "üê¢ Queries lentas:" -ForegroundColor Yellow
supabase inspect db outliers --linked > "$reportsDir/outliers_$TIMESTAMP.txt"

# Tabelas inchadas
Write-Host "üéà Tabelas inchadas:" -ForegroundColor Yellow
supabase inspect db bloat --linked > "$reportsDir/bloat_$TIMESTAMP.txt"

# Deadlocks
Write-Host "üîí Deadlocks:" -ForegroundColor Yellow
supabase inspect db locks --linked > "$reportsDir/locks_$TIMESTAMP.txt"

# Sa√∫de autovacuum
Write-Host "üßπ Sa√∫de autovacuum:" -ForegroundColor Yellow
supabase inspect db vacuum-stats --linked > "$reportsDir/vacuum_$TIMESTAMP.txt"

# 5. Verificar logs
Write-Host "üìú Verificando logs..." -ForegroundColor Yellow
supabase logs --project-ref $env:PROJECT_REF --service postgres > "$reportsDir/postgres_logs_$TIMESTAMP.txt"
supabase logs --project-ref $env:PROJECT_REF --service api > "$reportsDir/api_logs_$TIMESTAMP.txt"
supabase logs --project-ref $env:PROJECT_REF --service auth > "$reportsDir/auth_logs_$TIMESTAMP.txt"

# 6. Verificar advisors de seguran√ßa
Write-Host "üîê Verificando advisors de seguran√ßa..." -ForegroundColor Yellow
supabase inspect db advisors --linked > "$reportsDir/advisors_$TIMESTAMP.txt"

Write-Host "‚úÖ Monitoramento conclu√≠do. Relat√≥rios dispon√≠veis em $reportsDir" -ForegroundColor Green